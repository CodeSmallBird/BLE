C51 COMPILER V9.00   DS1302                                                                06/08/2014 20:31:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN DS1302.OBJ
COMPILER INVOKED BY: E:\Program Files\KEIL\C51\BIN\C51.EXE DS1302.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "DS1302.h"
   2          /********************************************************************
   3          * 名称 :  v_RTInputByte（）
   4          * 功能 :  往DS1302写入1Byte数据
   5          * 输入 :  ucDa 写入的数据
   6          * 输出 :  无
   7          ***********************************************************************/
   8          void v_RTInputByte(uchar ucDa)
   9          {
  10   1              uchar i;
  11   1              ACC = ucDa;
  12   1              T_RST = 1;
  13   1              for(i=8; i>0; i--)
  14   1              {
  15   2                      T_IO = ACC0;
  16   2                      T_CLK = 1;
  17   2                      T_CLK = 0;
  18   2                      ACC = ACC >> 1;
  19   2              }
  20   1      }
  21          
  22          /********************************************************************
  23          * 名称  :   uc_RTOutputByte（）
  24          * 功能  :   从DS1302读取1Byte数据
  25          * 输入  :       无
  26          * 返回值:   ACC
  27          ***********************************************************************/
  28          uchar uc_RTOutputByte(void) 
  29          {
  30   1              uchar i;
  31   1              T_RST = 1;
  32   1              for(i=8; i>0; i--)
  33   1              {
  34   2                      ACC = ACC >>1;
  35   2                      T_IO=1;
  36   2                      ACC7 = T_IO;
  37   2                      T_CLK = 1;
  38   2                      T_CLK = 0;
  39   2              }
  40   1              return(ACC);
  41   1      }
  42          
  43          /********************************************************************
  44          * 名称   :   v_W1302(uchar ucAddr, uchar ucDa)
  45          * 功能   :   往DS1302写入数据
  46          * 输入   :   ucAddr: DS1302地址, ucDa: 要写的数据
  47          * 返回值 :   无
  48          ***********************************************************************/
  49          void v_W1302(uchar ucAddr, uchar ucDa)
  50          {
  51   1              T_RST = 0;
  52   1              T_CLK = 0;
  53   1              T_RST = 1;
  54   1              v_RTInputByte(ucAddr);   // 写地址 
  55   1              _nop_();
C51 COMPILER V9.00   DS1302                                                                06/08/2014 20:31:50 PAGE 2   

  56   1              _nop_();
  57   1              v_RTInputByte(ucDa);     // 写1Byte数据
  58   1              T_CLK = 1;
  59   1              T_RST = 0;
  60   1      }
  61          
  62          /********************************************************************
  63          * 名称   :  uc_R1302(uchar ucAddr)
  64          * 功能   :  读取DS1302某地址的数据
  65          * 输入   :  ucAddr: DS1302地址
  66          * 返回值 :  ucDa :读取的数据
  67          ***********************************************************************/
  68          uchar uc_R1302(uchar ucAddr)
  69          {
  70   1              uchar ucDa;
  71   1              T_RST = 0;
  72   1              T_CLK = 0;
  73   1              T_RST = 1;
  74   1              v_RTInputByte(ucAddr);    //写地址，命令
  75   1              _nop_();
  76   1              _nop_();
  77   1              ucDa = uc_RTOutputByte(); //读1Byte数据
  78   1              T_CLK = 1;
  79   1              T_RST = 0;
  80   1              return(ucDa);
  81   1      }
  82          
  83          /********************************************************************
  84          * 名称   :  v_BurstW1302T
  85          * 功能   :  往DS1302写入时钟数据(多字节方式)
  86          * 输入   :  pSecDa: 时钟数据地址 格式为: 秒 分 时 日 月 星期 年 控制
  87          *                                                  8Byte (BCD码) 1B 1B 1B 1B 1B 1B  1B  1B
  88          * 返回值 :  无
  89          ***********************************************************************/
  90          void v_BurstW1302T(uchar *pSecDa)
  91          {
  92   1              uchar i;
  93   1              v_W1302(0x8e, 0x00);          //控制命令,WP=0,写操作
  94   1              T_RST = 0;
  95   1              T_CLK = 0;
  96   1              T_RST = 1;
  97   1              v_RTInputByte(0xbe);          //0xbe:时钟多字节写命令
  98   1              for(i=8; i>0; i--)            //8Byte = 7Byte 时钟数据 + 1Byte 控制
  99   1              {
 100   2                      v_RTInputByte(*pSecDa);   //写1Byte数据
 101   2                      pSecDa++;
 102   2              }
 103   1              T_CLK = 1;
 104   1              T_RST = 0;
 105   1      }
 106          
 107          /********************************************************************
 108          * 名称   :  v_BurstR1302T(uchar *pSecDa)
 109          * 功能   :  读取DS1302时钟数据
 110          * 输入   :  pSecDa: 时钟数据地址 格式为: 秒 分 时 日 月 星期 年
 111          *                                              7Byte (BCD码) 1B 1B 1B 1B 1B 1B   1B
 112          * 返回值 :  ucDa :读取的数据
 113          ***********************************************************************/
 114          void v_BurstR1302T(uchar *pSecDa)
 115          {
 116   1              uchar i;
 117   1              T_RST = 0;
C51 COMPILER V9.00   DS1302                                                                06/08/2014 20:31:50 PAGE 3   

 118   1              T_CLK = 0;
 119   1              T_RST = 1;
 120   1              v_RTInputByte(0xbf);               //0xbf:时钟多字节读命令
 121   1              for(i=8; i>0; i--)
 122   1              {
 123   2                      *pSecDa = uc_RTOutputByte();   //读1Byte数据
 124   2                      pSecDa++;
 125   2              }
 126   1              T_CLK = 1;
 127   1              T_RST = 0;
 128   1      }
 129          
 130          /********************************************************************
 131          * 名称   :  v_BurstW1302R(uchar *pReDa)
 132          * 功能   :  往DS1302寄存器数写入数据(多字节方式)
 133          * 输入   :  pReDa: 寄存器数据地址
 134          * 返回值 :  无
 135          ***********************************************************************/
 136          void v_BurstW1302R(uchar *pReDa)
 137          {
 138   1              uchar i;
 139   1              v_W1302(0x8e,0x00);         //控制命令,WP=0,写操作
 140   1              T_RST = 0;
 141   1              T_CLK = 0;
 142   1              T_RST = 1;
 143   1              v_RTInputByte(0xfe);       //0xbe:时钟多字节写命令
 144   1              for(i=31; i>0; i--)        //31Byte 寄存器数据
 145   1              {
 146   2                      v_RTInputByte(*pReDa); //写1Byte数据
 147   2                      pReDa++;
 148   2              }
 149   1              T_CLK = 1;
 150   1              T_RST = 0;
 151   1      }
 152          
 153          /********************************************************************
 154          * 名称   :  v_BurstR1302R(uchar *pReDa)
 155          * 功能   :  读取DS1302寄存器数据
 156          * 输入   :  pReDa: 寄存器数据地址
 157          * 返回值 :  无
 158          ***********************************************************************/
 159          void v_BurstR1302R(uchar *pReDa)
 160          {
 161   1              uchar i;
 162   1              T_RST = 0;
 163   1              T_CLK = 0;
 164   1              T_RST = 1;
 165   1              v_RTInputByte(0xff);            //0xbf:时钟多字节读命令
 166   1              for(i=31; i>0; i--)             //31Byte 寄存器数据
 167   1              {
 168   2                      *pReDa = uc_RTOutputByte(); //读1Byte数据
 169   2                      pReDa++;
 170   2              }
 171   1              T_CLK = 1;
 172   1              T_RST = 0;
 173   1      }
 174          
 175          /********************************************************************
 176          * 名称  :  v_Set1302(uchar *pSecDa)
 177          * 功能  :  设置初始时间
 178          * 输入  :  pSecDa: 初始时间地址。初始时间格式为: 秒 分 时 日 月 星期 年
 179          *                                                                  7Byte (BCD码) 1B 1B 1B 1B 1B 1B  1B
C51 COMPILER V9.00   DS1302                                                                06/08/2014 20:31:50 PAGE 4   

 180          * 返回值: 无
 181          ***********************************************************************/
 182          void v_Set1302(uchar *pSecDa)
 183          {
 184   1              uchar i;
 185   1              uchar ucAddr = 0x80;
 186   1              v_W1302(0x8e, 0x00);            //控制命令,WP=0,写操作
 187   1              for(i=7; i>0; i--)
 188   1              {
 189   2                      v_W1302(ucAddr, *pSecDa);   // 秒 分 时 日 月 星期 年
 190   2                      pSecDa++;
 191   2                      ucAddr += 2;
 192   2              }
 193   1              v_W1302(0x8e, 0x80);            //控制命令,WP=1,写保护
 194   1      }
 195          
 196          /********************************************************************
 197          * 名称   : v_Get1302(uchar ucCurtime[])
 198          * 功能   : 读取DS1302当前时间
 199          * 输入   : ucCurtime: 保存当前时间地址。当前时间格式为: 秒 分 时 日 月 星期 年
 200          *                                         7Byte (BCD码) 1B 1B 1B 1B 1B  1B  1B
 201          * 返回值 : 无
 202          ***********************************************************************/
 203          void v_Get1302(uchar ucCurtime[])
 204          {
 205   1              uchar i;
 206   1              uchar ucAddr = 0x81;
 207   1              for(i=0; i<7; i++)
 208   1              {
 209   2                      ucCurtime[i] = uc_R1302(ucAddr);    //格式为: 秒 分 时 日 月 星期 年
 210   2                      ucAddr += 2;
 211   2              }
 212   1      }
 213          
 214          /********************************************************************
 215          * 名称 : dectobcd(uchar dec)
 216          * 功能 : DEC码转换为BCD码
 217          * 输入 : dec码
 218          * 输出 : bcd码
 219          ***********************************************************************/
 220          uchar dectobcd(uchar dec)
 221          {
 222   1              uchar bcd;
 223   1              bcd = 0;
 224   1              while(dec >= 10)
 225   1              {              
 226   2                      dec -= 10;                         
 227   2                      bcd++;
 228   2              } 
 229   1              bcd <<= 4;
 230   1              bcd |= dec;
 231   1              return bcd;
 232   1      }
 233          
 234          /********************************************************************
 235          * 名称 : bcdtodec(uchar bcd)
 236          * 功能 : BCD码转换为DEC码
 237          * 输入 : bcd码
 238          * 输出 : dec码
 239          ***********************************************************************/
 240          uchar bcdtodec(uchar bcd)
 241          {
C51 COMPILER V9.00   DS1302                                                                06/08/2014 20:31:50 PAGE 5   

 242   1              uchar data1;
 243   1              data1 = bcd & 0x0f;     //取BCD低4位
 244   1              bcd = bcd & 0x70;       //剔除BCD的最高位和低4位。
 245   1              data1 += bcd >> 1;
 246   1              data1 += bcd >> 3;      //用位移代替乘法运算
 247   1              return data1;
 248   1      }
 249          
 250          /********************************************************************
 251          * 名称 : Write_DS1302Init()
 252          * 功能 : 往DS1302中写入数据。最开始显示的数据就是在这里设置的。
 253          * 输入 : 无
 254          * 输出 : 无
 255          ***********************************************************************/
 256          void Write_DS1302Init(uchar year,uchar month,uchar day,uchar week,uchar hour,uchar min,uchar sec)
 257          {
 258   1              v_W1302(0x8e,0);
 259   1              v_W1302(0x80,dectobcd(sec));    //写入秒
 260   1              v_W1302(0x8e,0);
 261   1              v_W1302(0x82,dectobcd(min));    //写入分
 262   1              v_W1302(0x8e,0);
 263   1              v_W1302(0x84,dectobcd(hour));   //写入小时
 264   1              v_W1302(0x8e,0);
 265   1              v_W1302(0x86,dectobcd(day));    //写入日
 266   1              v_W1302(0x8e,0);
 267   1              v_W1302(0x88,dectobcd(month));  //写入月
 268   1              v_W1302(0x8e,0);
 269   1              v_W1302(0x8a,dectobcd(week));   //写入星期
 270   1              v_W1302(0x8e,0);
 271   1              v_W1302(0x8c,dectobcd(year));   //写入年        
 272   1      }
 273          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    435    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
